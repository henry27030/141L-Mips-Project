000100000 //add r8 until r8=30
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000100000
000001100
001000110 //10
000001100
001000110 //110
000001100
001000110 //1110
000001100
001000110 //11110
100001000 //r1=mem[0] = LSW = b8 b7 b6 b5 b4 b3 b2 b1
000000000 //r0=1 now
100010000 //r2=mem[1] = MSW = 00000 b11 b10 b9
110100010 //r4=00000 b11 b10 b9			start of calculating p8
001101001 //shift r4 right by 2
110101010 //r5=00000 b11 b10 b9
001001011 //shift r5 left by 6
001001011
001001011
001101011 //shift r5 right by 7
001101011
001101011
001101010
010100101 //r4=b11^b10
110101010 //r5=00000 b11 b10 b9
001001011 //shift r5 left by 7
001001011
001001011
001001010
001101011 //shift r5 right by 7
001101011
001101011
001101010
010100101 //r4=b11^b10^b9
110101001 //r5=b8 b7 b6 b5 b4 b3 b2 b1
001101011 //shift r5 right by 7
001101011
001101011
001101010
010100101 //r4=b11^b10^b9^b8
110101001 //r5=b8 b7 b6 b5 b4 b3 b2 b1
001001010 //shift r5 left by 1
001101011 //shift r5 right by 7
001101011
001101011
001101010
010100101 //r4=b11^b10^b9^b8^b7
110101001 //r5=b8 b7 b6 b5 b4 b3 b2 b1
001001011 //shift r5 left by 2
001101011 //shift r5 right by 7
001101011
001101011
001101010
010100101 //r4=b11^b10^b9^b8^b7^b6
110101001 //r5=b8 b7 b6 b5 b4 b3 b2 b1
001001011 //shift r5 left by 3
001001010
001101011 //shift r5 right by 7
001101011
001101011
001101010
010100101 //r4=b11^b10^b9^b8^b7^b6^b5, so now r4=p8
110110100 //r6=p8
110100010 //r4=00000 b11 b10 b9
001101001 //shift r4 right by 2
110101010 //r5=00000 b11 b10 b9
001001011 //shift r5 left by 6
001001011
001001011
001101011 //shift r5 right by 7
001101011
001101011
001101010
111100101 //r4=b11 b10
110101010 //r5=00000 b11 b10 b9
001001011 //shift r5 left by 7
001001011
001001011
001001010
001101011 //shift r5 right by 7
001101011
001101011
001101010
111100101 //r4=b11 b10 b9
110101001 //r5=b8 b7 b6 b5 b4 b3 b2 b1
001101011 //shift r5 right by 7
001101011
001101011
001101010
111100101 //r4=b11 b10 b9 b8
110101001 //r5=b8 b7 b6 b5 b4 b3 b2 b1
001001010 //shift r5 left by 1
001101011 //shift r5 right by 7
001101011
001101011
001101010
111100101 //r4=b11 b10 b9 b8 b7
110101001 //r5=b8 b7 b6 b5 b4 b3 b2 b1
001001011 //shift r5 left by 2
001101011 //shift r5 right by 7
001101011
001101011
001101010
111100101 //r4=b11 b10 b9 b8 b7 b6
110101001 //r5=b8 b7 b6 b5 b4 b3 b2 b1
001001011 //shift r5 left by 3
001001010
001101011 //shift r5 right by 7
001101011
001101011
001101010
111100101 //r4=b11 b10 b9 b8 b7 b6 b5
111100110 //r4=b11 b10 b9 b8 b7 b6 b5 p8, which is MSW or what should be in [31]
110111001 //r7 = b8 b7 b6 b5 b4 b3 b2 b1; use r7 to form input to [30]
001001111 //shift r7 left by 4
001001111
001101111 //shift r7 right by 7
001101111
001101111
001101110
110110001 //r6 = b8 b7 b6 b5 b4 b3 b2 b1
001001101 //shift r6 left by 5
001001101
001001100
001101101 //shift r6 right by 7
001101101
001101101
001101100
111111110 //r7=b4 b3
110110001 //r6 = b8 b7 b6 b5 b4 b3 b2 b1
001001101 //shift r6 left by 6
001001101
001001101
001101101 //shift r6 right by 7
001101101
001101101
001101100
111111110 //r7=b4 b3 b2
110110100 //r6=b11 b10 b9 b8 b7 b6 b5 p8; use r6 to calculate p4, use r2 to calculate p2
001101101 //shift r6 right by 7
001101101
001101101
001101100
110101100 //r5=11 b10 b9 b8 b7 b6 b5 p8
001001010 //shift r5 left by 1
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10
110010110 //r2=r6=b11^b10
110101100 //r5=11 b10 b9 b8 b7 b6 b5 p8
001001011 //shift r5 left by 2
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10^b9
110101100 //r5=11 b10 b9 b8 b7 b6 b5 p8
001001011 //shift r5 left by 3
001001010
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10^b9^b8
110101001 //r5=b8 b7 b6 b5 b4 b3 b2 b1
001001010 //shift r5 left by 1
001101011 //shift r5 right by 7
001101011
001101011
001101010
010010101 //r2=b11^b10^b7
110101001 //r5=b8 b7 b6 b5 b4 b3 b2 b1
001001011 //shift r5 left by 2
001101011 //shift r5 right by 7
001101011
001101011
001101010
010010101 //r2=b11^b10^b7^b6
110101001 //r5=b8 b7 b6 b5 b4 b3 b2 b1
001001011 //shift r5 left by 4
001001011
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10^b9^b8^b4
010010101 //r2=b11^b10^b7^b6^b4
110101001 //r5=b8 b7 b6 b5 b4 b3 b2 b1
001001011 //shift r5 left by 5
001001011
001001010
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10^b9^b8^b4^b3
010010101 //r2=b11^b10^b7^b6^b4^b3
110101001 //r5=b8 b7 b6 b5 b4 b3 b2 b1
001001011 //shift r5 left by 6
001001011
001001011
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10^b9^b8^b4^b3^b2 = p4
111111110 //r7=b4 b3 b2 p4
110101001 //r5=b8 b7 b6 b5 b4 b3 b2 b1
001001011 //shift r5 left by 7
001001011
001001011
001001010
001101011 //shift r5 right by 7
001101011
001101011
001101010
010010101 //r2=b11^b10^b7^b6^b4^b3^b1
111111101 //r7=b4 b3 b2 p4 b1
111111010 //r7=b4 b3 b2 p4 b1 p2

110110100 //r6=b11 b10 b9 b8 b7 b6 b5 p8
001101101 //shift r6 right by 7
001101101
001101101
001101100
110010110 //r2=r6=b11
110101100 //r5=11 b10 b9 b8 b7 b6 b5 p8
001001010 //shift r5 left by 1
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10
110101100 //r5=11 b10 b9 b8 b7 b6 b5 p8
001001011 //shift r5 left by 2
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10^b9
010010101 //r2=b11^b9
110101100 //r5=11 b10 b9 b8 b7 b6 b5 p8
001001011 //shift r5 left by 3
001001010
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10^b9^b8
110101100 //r5=11 b10 b9 b8 b7 b6 b5 p8
001001011 //shift r5 left by 4
001001011
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10^b9^b8^b7
010010101 //r2=b11^b9^b7
110101100 //r5=11 b10 b9 b8 b7 b6 b5 p8
001001011 //shift r5 left by 5
001001011
001001010
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10^b9^b8^b7^b6
110101100 //r5=11 b10 b9 b8 b7 b6 b5 p8
001001011 //shift r5 left by 6
001001011
001001011
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10^b9^b8^b7^b6^b5
010010101 //r2=b11^b9^b7^b5
110101001 //r1=b8 b7 b6 b5 b4 b3 b2 b1
001001011 //shift r5 left by 4
001001011
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10^b9^b8^b7^b6^b5^b4
010010101 //r2=b11^b9^b7^b5^b4
110101001 //r1=b8 b7 b6 b5 b4 b3 b2 b1
001001011 //shift r5 left by 5
001001011
001001010
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10^b9^b8^b7^b6^b5^b4^b3
110101001 //r1=b8 b7 b6 b5 b4 b3 b2 b1
001001011 //shift r5 left by 6
001001011
001001011
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10^b9^b8^b7^b6^b5^b4^b3^b2
010010101 //r2=b11^b9^b7^b5^b4^b2
110101001 //r1=b8 b7 b6 b5 b4 b3 b2 b1
001001011 //shift r5 left by 7
001001011
001001011
001001010
001101011 //shift r5 right by 7
001101011
001101011
001101010
010110101 //r6=b11^b10^b9^b8^b7^b6^b5^b4^b3^b2^b1
010010101 //r2=b11^b9^b7^b5^b4^b2^b1 = p1
111111010 //r7=0 b4 b3 b2 p4 b1 p2 p1
110010100 //r2=r4= p8 is rightmost bit
001000101 //shift r2 left by 7
001000101
001000101
001000100
001100101 //shift r2 right by 7
001100101
001100101
001100100
010110010 //r6=b11^b10^b9^b8^b7^b6^b5^b4^b3^b2^b1^p8
110010111 //r2=0 b4 b3 b2 p4 b1 p2 p1
001000101 //shift r2 left by 4
001000101
001100101 //shift r2 right by 7
001100101
001100101
001100100
010110010 //r6=b11^b10^b9^b8^b7^b6^b5^b4^b3^b2^b1^p8^p4
110010111 //r2=0 b4 b3 b2 p4 b1 p2 p1
001000101 //shift r2 left by 6
001000101
001000101
001100101 //shift r2 right by 7
001100101
001100101
001100100
010110010 //r6=b11^b10^b9^b8^b7^b6^b5^b4^b3^b2^b1^p8^p4^p2
110010111 //r2=0 b4 b3 b2 p4 b1 p2 p1
001000101 //shift r2 left by 7
001000101
001000101
001000100
001100101 //shift r2 right by 7
001100101
001100101
001100100
010110010 //r6=b11^b10^b9^b8^b7^b6^b5^b4^b3^b2^b1^p8^p4^p2^p1 = p0
111111110 //b4 b3 b2 p4 b1 p2 p1 p0 so now r7 has what to store in [30]
101011111 //[r3]=r7, [30]=r7
000001100 //r3=31
101011100 //[r3]=r4, [31]=r4
000001100 //r3=32 for the next loop
000000000 //r0=2 for the next loop
011000000 //if r0!=r8, branch LUT[0